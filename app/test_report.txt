🧪 REPORTE DE TESTS
============================================================

✔ Inicialización exitosa para categoría 'pokemon' con URL 'https://example.com/pokemon'
✔ Selector inexistente correctamente manejado: None
✔ Selector de precio encontrado: //span[@class='price']
============================================================
Tests ejecutados: 45
Tests exitosos : 44
Fallos         : 1
Errores        : 0

❌ FALLAS DETECTADAS:
- test_product_parameters_exist (tests.unit.test_third_impact.TestThirdImpact.test_product_parameters_exist) (key='title_selector'):
Traceback (most recent call last):
  File "C:\Users\Allan\Desktop\Scrapper\CardsScraper\tests\utils\basetest.py", line 40, in test_product_parameters_exist
    self.assertTrue(selectors[key], f"❌ Selector '{key}' está vacío")
AssertionError: '' is not true : ❌ Selector 'title_selector' está vacío


📄 DETALLES POR TEST:

--- tests.utils.basetest ---
→ Ejecutando: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
→ Ejecutando: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
→ Ejecutando: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
→ Ejecutando: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
→ Ejecutando: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
→ Ejecutando: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
→ Ejecutando: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.utils.basetest.BaseScraperTest.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.utils.basetest.BaseScraperTest.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.utils.basetest.BaseScraperTest.test_url_is_valid)

--- tests.unit.test_card_universe ---
→ Ejecutando: test_product_parameters_exist (tests.unit.test_card_universe.TesCardUniverse.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.unit.test_card_universe.TesCardUniverse.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.unit.test_card_universe.TesCardUniverse.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.unit.test_card_universe.TesCardUniverse.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.unit.test_card_universe.TesCardUniverse.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.unit.test_card_universe.TesCardUniverse.test_url_is_valid)

--- tests.unit.test_category ---
→ Ejecutando: test_category_initialization (tests.unit.test_category.TestCategory.test_category_initialization)
✔ Éxito: test_category_initialization (tests.unit.test_category.TestCategory.test_category_initialization)
→ Ejecutando: test_get_selector_invalid_key_returns_none (tests.unit.test_category.TestCategory.test_get_selector_invalid_key_returns_none)
✔ Éxito: test_get_selector_invalid_key_returns_none (tests.unit.test_category.TestCategory.test_get_selector_invalid_key_returns_none)
→ Ejecutando: test_get_selector_valid_key (tests.unit.test_category.TestCategory.test_get_selector_valid_key)
✔ Éxito: test_get_selector_valid_key (tests.unit.test_category.TestCategory.test_get_selector_valid_key)

--- tests.unit.test_el_reino ---
→ Ejecutando: test_product_parameters_exist (tests.unit.test_el_reino.TestElReinoPokemon.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.unit.test_el_reino.TestElReinoPokemon.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.unit.test_el_reino.TestElReinoPokemon.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.unit.test_el_reino.TestElReinoPokemon.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.unit.test_el_reino.TestElReinoPokemon.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.unit.test_el_reino.TestElReinoPokemon.test_url_is_valid)

--- tests.unit.test_game_of_magic ---
→ Ejecutando: test_product_parameters_exist (tests.unit.test_game_of_magic.TestGameOfMagicPokemon.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.unit.test_game_of_magic.TestGameOfMagicPokemon.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.unit.test_game_of_magic.TestGameOfMagicPokemon.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.unit.test_game_of_magic.TestGameOfMagicPokemon.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.unit.test_game_of_magic.TestGameOfMagicPokemon.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.unit.test_game_of_magic.TestGameOfMagicPokemon.test_url_is_valid)

--- tests.unit.test_guild_dreams ---
→ Ejecutando: test_product_parameters_exist (tests.unit.test_guild_dreams.TestGuildDreams.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.unit.test_guild_dreams.TestGuildDreams.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.unit.test_guild_dreams.TestGuildDreams.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.unit.test_guild_dreams.TestGuildDreams.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.unit.test_guild_dreams.TestGuildDreams.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.unit.test_guild_dreams.TestGuildDreams.test_url_is_valid)

--- tests.unit.test_hunter_card ---
→ Ejecutando: test_product_parameters_exist (tests.unit.test_hunter_card.TestHunterCardTcg.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.unit.test_hunter_card.TestHunterCardTcg.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.unit.test_hunter_card.TestHunterCardTcg.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.unit.test_hunter_card.TestHunterCardTcg.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.unit.test_hunter_card.TestHunterCardTcg.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.unit.test_hunter_card.TestHunterCardTcg.test_url_is_valid)

--- tests.unit.test_la_comarca ---
→ Ejecutando: test_product_parameters_exist (tests.unit.test_la_comarca.TestLaComarca.test_product_parameters_exist)
✔ Éxito: test_product_parameters_exist (tests.unit.test_la_comarca.TestLaComarca.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.unit.test_la_comarca.TestLaComarca.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.unit.test_la_comarca.TestLaComarca.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.unit.test_la_comarca.TestLaComarca.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.unit.test_la_comarca.TestLaComarca.test_url_is_valid)

--- tests.unit.test_third_impact ---
→ Ejecutando: test_product_parameters_exist (tests.unit.test_third_impact.TestThirdImpact.test_product_parameters_exist)
→ Ejecutando: test_product_selector_priority (tests.unit.test_third_impact.TestThirdImpact.test_product_selector_priority)
✔ Éxito: test_product_selector_priority (tests.unit.test_third_impact.TestThirdImpact.test_product_selector_priority)
→ Ejecutando: test_url_is_valid (tests.unit.test_third_impact.TestThirdImpact.test_url_is_valid)
✔ Éxito: test_url_is_valid (tests.unit.test_third_impact.TestThirdImpact.test_url_is_valid)
